import type * as React from 'react';

/** Auto Generated By `generate-envPrepare` */
const styleMap = {
  WebkitBackfaceVisibility: 'a',
  WebkitBoxOrient: 'b',
  WebkitLineClamp: 'c',
  WebkitTapHighlightColor: 'd',
  WebkitTransformStyle: 'e',
  animationDelay: 'f',
  animationDirection: 'g',
  animationDuration: 'h',
  animationFillMode: 'i',
  animationIterationCount: 'j',
  animationName: 'k',
  animationPlayState: 'l',
  animationTimingFunction: 'm',
  backgroundClip: 'n',
  backgroundColor: 'o',
  backgroundImage: 'p',
  backgroundPosition: 'q',
  backgroundRepeat: 'r',
  backgroundSize: 's',
  borderBlockEnd: 't',
  borderBlockEndColor: 'u',
  borderBlockEndWidth: 'v',
  borderBlockStart: 'w',
  borderBlockStartColor: 'x',
  borderBlockStartWidth: 'y',
  borderBottom: 'z',
  borderBottomColor: 'A',
  borderBottomWidth: 'B',
  borderCollapse: 'C',
  borderColor: 'D',
  borderEndEndRadius: 'E',
  borderEndStartRadius: 'F',
  borderInlineEnd: 'G',
  borderInlineEndColor: 'H',
  borderInlineEndWidth: 'I',
  borderInlineStart: 'J',
  borderInlineStartColor: 'K',
  borderInlineStartWidth: 'L',
  borderLeftColor: 'M',
  borderRadius: 'N',
  borderRight: 'O',
  borderRightColor: 'P',
  borderSpacing: 'Q',
  borderStartEndRadius: 'R',
  borderStartStartRadius: 'S',
  borderStyle: 'T',
  borderTopColor: 'U',
  borderTopWidth: 'V',
  borderWidth: 'W',
  flexDirection: 'X',
  fontStretch: 'Y',
  fontVariant: 'Z',
  insetBlockEnd: 'aa',
  insetBlockStart: 'ab',
  insetInline: 'ac',
  insetInlineEnd: 'ad',
  insetInlineStart: 'ae',
  justifyContent: 'af',
  justifyItems: 'ag',
  letterSpacing: 'ah',
  listStylePosition: 'ai',
  listStyleType: 'aj',
  marginBlock: 'ak',
  marginBlockEnd: 'al',
  marginBlockStart: 'am',
  marginBottom: 'an',
  marginInline: 'ao',
  marginInlineEnd: 'ap',
  marginInlineStart: 'aq',
  marginRight: 'ar',
  outlineColor: 'as',
  overflowWrap: 'at',
  paddingBlock: 'au',
  paddingBlockStart: 'av',
  paddingBottom: 'aw',
  paddingInline: 'ax',
  paddingInlineEnd: 'ay',
  paddingInlineStart: 'az',
  paddingLeft: 'aA',
  paddingRight: 'aB',
  pointerEvents: 'aC',
  tableLayout: 'aD',
  textDecoration: 'aE',
  textDecorationSkipInk: 'aF',
  textOverflow: 'aG',
  textRendering: 'aH',
  textTransform: 'aI',
  touchAction: 'aJ',
  transformOrigin: 'aK',
  transitionDuration: 'aL',
  transitionTimingFunction: 'aM',
  verticalAlign: 'aN',
  writingMode: 'aO',
} as const;
/** Auto Generated By `generate-envPrepare` */

/**
 * Check if T is subset of Record<React.CSSProperties, string>.
 * Will failed if T (like `styleMap`) contains the key not in CSSProperties.
 */
type ValidateStyleName<T extends object> = keyof T extends keyof React.CSSProperties ? T : never;

type RevertType = Record<string, keyof React.CSSProperties>;

function revertStyleMap<T extends object>(map: ValidateStyleName<T>) {
  return Object.keys(map).reduce((acc, key: keyof React.CSSProperties) => {
    acc[(map as any)[key]] = key;
    return acc;
  }, {} as RevertType);
}

const reverted = revertStyleMap(styleMap);

type RevertKV<T extends object> = {
  [K in keyof T as T[K]]: K;
};

export default reverted as any as RevertKV<typeof styleMap>;
