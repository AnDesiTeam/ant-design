// mixins for button

// ------------------------
@mixin button-size($height, $padding-horizontal, $font-size, $border-radius) {
  $padding-vertical: max(
    (round((($height - $font-size * $line-height-base) / 2) * 10) / 10) -
      $border-width-base,
    0
  );
  height: $height;
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border-radius;
}
@mixin button-color($color, $background, $border) {
  color: $color;
  border-color: $border;
  // a inside Button which only work in Chrome
  & {
    background: $background;
  }
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentcolor;
    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: transparent;
      content: "";
    }
  }
}
@mixin button-disabled(
  $color: $btn-disable-color,
  $background: $btn-disable-bg,
  $border: $btn-disable-border
) {
  &:disabled {
    &,
    &:hover,
    &:focus,
    &:active {
      @include button-color($color, $background, $border);
      text-shadow: none;
      box-shadow: none;
    }
  }
}
@mixin button-variant-primary(
  $color,
  $background,
  $backgroundHover: yellow,
  $backgroundActive: yellow
) {
  @include button-color($color, $background, $background);
  text-shadow: $btn-text-shadow;
  box-shadow: $btn-primary-shadow;
  &:hover,
  &:focus {
    & {
      @include button-color(
        (
          $color,
          /*colorPalette('@{background}', 7) */ "",
          /*colorPalette('@{background}', 7) */ ""
        )
      );
    }
    & {
      @include button-color(
        (
          $color,
          /*colorPalette('@{background}', 5) */ "",
          /*colorPalette('@{background}', 5) */ ""
        )
      );
    }
    & {
      @include button-color($color, $backgroundHover, $backgroundHover);
    }
  }
  &:active {
    & {
      @include button-color(
        (
          $color,
          /*colorPalette('@{background}', 5) */ "",
          /*colorPalette('@{background}', 5) */ ""
        )
      );
    }
    & {
      @include button-color(
        (
          $color,
          /*colorPalette('@{background}', 7) */ "",
          /*colorPalette('@{background}', 7) */ ""
        )
      );
    }
    & {
      @include button-color($color, $backgroundActive, $backgroundActive);
    }
  }
  @include button-disabled;
}
@mixin button-variant-other($color, $background, $border) {
  @include button-color($color, $background, $border);
  &:hover,
  &:focus {
    & {
      @include button-color($primary-5, $background, $primary-5);
    }
    & {
      @include button-color(
        (
          /*colorPalette('@{btn-primary-bg}', 5) */ "",
          $background,
          /*colorPalette('@{btn-primary-bg}', 5) */ ""
        )
      );
    }
    & {
      @include button-color(
        $primary-color-hover,
        $background,
        $primary-color-hover
      );
    }
  }
  &:active {
    & {
      @include button-color($primary-7, $background, $primary-7);
    }
    & {
      @include button-color(
        (
          /*colorPalette('@{btn-primary-bg}', 7) */ "",
          $background,
          /*colorPalette('@{btn-primary-bg}', 7) */ ""
        )
      );
    }
    & {
      @include button-color(
        $primary-color-active,
        $background,
        $primary-color-active
      );
    }
  }
  @include button-disabled;
}
@mixin button-variant-ghost(
  $color,
  $border,
  $borderHover: yellow,
  $borderActive: yellow
) {
  @include button-color($color, null, $border);
  text-shadow: none;
  &:hover,
  &:focus {
    & {
      & {
        @include button-color(
          (/*colorPalette('@{color}', 7) */ "", null, black)
        );
      }
      & {
        @include button-color(
          (/*colorPalette('@{color}', 5) */ "", null, black)
        );
      }
      & {
        @include button-color($borderActive, black, black);
      }
    }
    & {
      & {
        @include button-color(
          (
            /*colorPalette('@{color}', 7) */ "",
            null,
            /*colorPalette('@{color}', 7) */ ""
          )
        );
      }
      & {
        @include button-color(
          (
            /*colorPalette('@{color}', 5) */ "",
            null,
            /*colorPalette('@{color}', 5) */ ""
          )
        );
      }
      & {
        @include button-color($borderHover, black, $borderHover);
      }
    }
  }
  &:active {
    & {
      & {
        @include button-color(
          (/*colorPalette('@{color}', 5) */ "", null, black)
        );
      }
      & {
        @include button-color(
          (/*colorPalette('@{color}', 7) */ "", null, black)
        );
      }
      & {
        @include button-color($borderActive, black, black);
      }
    }
    & {
      & {
        @include button-color(
          (
            /*colorPalette('@{color}', 5) */ "",
            null,
            /*colorPalette('@{color}', 5) */ ""
          )
        );
      }
      & {
        @include button-color(
          (
            /*colorPalette('@{color}', 7) */ "",
            null,
            /*colorPalette('@{color}', 7) */ ""
          )
        );
      }
      & {
        @include button-color($borderActive, black, $borderActive);
      }
    }
  }
  @include button-disabled;
}
@mixin button-group-base($btnClassName) {
  position: relative;
  display: inline-flex;
  > .#{$btnClassName},
  > span > .#{$btnClassName} {
    position: relative;
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
    &:disabled {
      z-index: 0;
    }
  }
  .#{$btnClassName}-icon-only {
    font-size: $font-size-base;
  }
}
// Base styles of buttons

// --------------------------------------------------
@mixin btn {
  position: relative;
  display: inline-block;
  font-weight: $btn-font-weight;
  white-space: nowrap;
  text-align: center;
  background-image: none;
  border: $btn-border-width $btn-border-style black;
  box-shadow: $btn-shadow;
  cursor: pointer;
  transition: all 0.3s $ease-in-out;
  user-select: none;
  touch-action: manipulation;
  @include button-size(
    $btn-height-base,
    $btn-padding-horizontal-base,
    $font-size-base,
    $btn-border-radius-base
  );
  > .#{$iconfont-css-prefix} {
    line-height: 1;
  }
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &:not([disabled]):hover {
    text-decoration: none;
  }
  &:not([disabled]):active {
    outline: 0;
    box-shadow: none;
  }
  &:disabled {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }
  &-lg {
    @include button-size(
      $btn-height-lg,
      $btn-padding-horizontal-lg,
      $btn-font-size-lg,
      $btn-border-radius-base
    );
  }
  &-sm {
    @include button-size(
      $btn-height-sm,
      $btn-padding-horizontal-sm,
      $btn-font-size-sm,
      $btn-border-radius-sm
    );
  }
}
// primary button style
@mixin btn-primary {
  @include button-variant-primary(
    $btn-primary-color,
    $btn-primary-bg,
    $primary-color-hover,
    $primary-color-active
  );
}
// default button style
@mixin btn-default {
  @include button-variant-other(
    $btn-default-color,
    $btn-default-bg,
    $btn-default-border
  );
  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    background: $btn-default-bg;
  }
}
// ghost button style
@mixin btn-ghost {
  @include button-variant-other(
    $btn-ghost-color,
    $btn-ghost-bg,
    $btn-ghost-border
  );
}
// dashed button style
@mixin btn-dashed {
  @include button-variant-other(
    $btn-default-color,
    $btn-default-bg,
    $btn-default-border
  );
  border-style: dashed;
}
// danger button style
@mixin btn-danger {
  @include button-variant-primary(
    $btn-danger-color,
    $btn-danger-bg,
    $error-color-hover,
    $error-color-active
  );
}
// danger default button style
@mixin btn-danger-default {
  @include button-color($error-color, $btn-default-bg, $error-color);
  &:hover,
  &:focus {
    & {
      @include button-color(
        (
          /*colorPalette('@{error-color}', 7) */ "",
          $btn-default-bg,
          /*colorPalette('@{error-color}', 7)
          */ ""
        )
      );
    }
    & {
      @include button-color(
        (
          /*colorPalette('@{error-color}', 5) */ "",
          $btn-default-bg,
          /*colorPalette('@{error-color}', 5)
          */ ""
        )
      );
    }
    & {
      @include button-color(
        $error-color-hover,
        $btn-default-bg,
        $error-color-hover
      );
    }
  }
  &:active {
    & {
      @include button-color(
        (
          /*colorPalette('@{error-color}', 5) */ "",
          $btn-default-bg,
          /*colorPalette('@{error-color}', 5)
          */ ""
        )
      );
    }
    & {
      @include button-color(
        (
          /*colorPalette('@{error-color}', 7) */ "",
          $btn-default-bg,
          /*colorPalette('@{error-color}', 7)
          */ ""
        )
      );
    }
    & {
      @include button-color(
        $error-color-active,
        $btn-default-bg,
        $error-color-active
      );
    }
  }
  @include button-disabled;
}
// danger link button style
@mixin btn-danger-link {
  @include button-variant-other($error-color, black, black);
  box-shadow: none;
  &:hover,
  &:focus {
    & {
      @include button-color(
        (/*colorPalette('@{error-color}', 7) */ "", black, black)
      );
    }
    & {
      @include button-color(
        (/*colorPalette('@{error-color}', 5) */ "", black, black)
      );
    }
    & {
      @include button-color($error-color-hover, black, black);
    }
  }
  &:active {
    & {
      @include button-color(
        (/*colorPalette('@{error-color}', 5) */ "", black, black)
      );
    }
    & {
      @include button-color(
        (/*colorPalette('@{error-color}', 7) */ "", black, black)
      );
    }
    & {
      @include button-color($error-color-active, black, black);
    }
  }
  @include button-disabled($disabled-color, black, black);
}
// link button style
@mixin btn-link {
  @include button-variant-other($link-color, black, black);
  box-shadow: none;
  &:hover {
    background: $btn-link-hover-bg;
  }
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include button-disabled($disabled-color, black, black);
}
// link button disabled style
@mixin btn-href-disabled {
  cursor: not-allowed;
  > * {
    pointer-events: none;
  }
  &,
  &:hover,
  &:focus,
  &:active {
    @include button-color($btn-disable-color, black, black);
    text-shadow: none;
    box-shadow: none;
  }
}
// text button style
@mixin btn-text {
  @include button-variant-other($text-color, black, black);
  box-shadow: none;
  &:hover,
  &:focus {
    color: $text-color;
    background: $btn-text-hover-bg;
    border-color: transparent;
  }
  &:active {
    color: $text-color;
    background: fadein($btn-text-hover-bg, 1%);
    border-color: transparent;
  }
  @include button-disabled($disabled-color, black, black);
}
@mixin btn-danger-text {
  @include button-variant-other($error-color, black, black);
  box-shadow: none;
  &:hover,
  &:focus {
    & {
      @include button-color(
        (/*colorPalette('@{error-color}', 7) */ "", $btn-text-hover-bg, black)
      );
    }
    & {
      @include button-color(
        (/*colorPalette('@{error-color}', 5) */ "", $btn-text-hover-bg, black)
      );
    }
    & {
      @include button-color($error-color-hover, $btn-text-hover-bg, black);
    }
  }
  &:active {
    & {
      @include button-color(
        (
          /*colorPalette('@{error-color}', 5) */ "",
          fadein($btn-text-hover-bg, 1%),
          black
        )
      );
    }
    & {
      @include button-color(
        (
          /*colorPalette('@{error-color}', 7) */ "",
          fadein($btn-text-hover-bg, 1%),
          black
        )
      );
    }
    & {
      @include button-color(
        ($error-color-active, fadein($btn-text-hover-bg, 1%), black)
      );
    }
  }
  @include button-disabled($disabled-color, black, black);
}
// round button
@mixin btn-round($btnClassName: btn) {
  @include button-size(
    (
      $btn-circle-size,
      ($btn-circle-size / 2),
      $font-size-base,
      $btn-circle-size
    )
  );
  &.#{$btnClassName}-lg {
    @include button-size(
      (
        $btn-circle-size-lg,
        ($btn-circle-size-lg / 2),
        $btn-font-size-lg,
        $btn-circle-size-lg
      )
    );
  }
  &.#{$btnClassName}-sm {
    @include button-size(
      (
        $btn-circle-size-sm,
        ($btn-circle-size-sm / 2),
        $font-size-base,
        $btn-circle-size-sm
      )
    );
  }
}
// square button: the content only contains icon
@mixin btn-square($btnClassName: btn) {
  @include square($btn-square-size);
  @include button-size(
    $btn-square-size,
    0,
    $btn-square-only-icon-size,
    $btn-border-radius-base
  );
  & > * {
    font-size: $btn-square-only-icon-size;
  }
  &.#{$btnClassName}-lg {
    @include square($btn-square-size-lg);
    @include button-size(
      $btn-square-size-lg,
      0,
      $btn-square-only-icon-size-lg,
      $btn-border-radius-base
    );
    & > * {
      font-size: $btn-square-only-icon-size-lg;
    }
  }
  &.#{$btnClassName}-sm {
    @include square($btn-square-size-sm);
    @include button-size(
      $btn-square-size-sm,
      0,
      $btn-square-only-icon-size-sm,
      $btn-border-radius-base
    );
    & > * {
      font-size: $btn-square-only-icon-size-sm;
    }
  }
}
// circle button: the content only contains icon
@mixin btn-circle($btnClassName: btn) {
  min-width: $btn-height-base;
  padding-right: 0;
  padding-left: 0;
  text-align: center;
  border-radius: 50%;
  &.#{$btnClassName}-lg {
    min-width: $btn-height-lg;
    border-radius: 50%;
  }
  &.#{$btnClassName}-sm {
    min-width: $btn-height-sm;
    border-radius: 50%;
  }
}
// Horizontal button groups style

// --------------------------------------------------
@mixin btn-group($btnClassName: btn) {
  @include button-group-base($btnClassName);
  @at-root .#{$btnClassName} + .#{$btnClassName},
    .#{$btnClassName} + &,
    span + .#{$btnClassName},
    .#{$btnClassName} + span,
    > span + span,
    & + .#{$btnClassName},
    & + & {
    margin-left: -1px;
  }
  .#{$btnClassName}-primary
    + .#{$btnClassName}:not(.#{$btnClassName}-primary):not([disabled]) {
    border-left-color: transparent;
  }
  .#{$btnClassName} {
    border-radius: 0;
  }
  > .#{$btnClassName}:first-child,
  > span:first-child > .#{$btnClassName} {
    margin-left: 0;
  }
  > .#{$btnClassName}:only-child {
    border-radius: $btn-border-radius-base;
  }
  > span:only-child > .#{$btnClassName} {
    border-radius: $btn-border-radius-base;
  }
  > .#{$btnClassName}:first-child:not(:last-child),
  > span:first-child:not(:last-child) > .#{$btnClassName} {
    border-top-left-radius: $btn-border-radius-base;
    border-bottom-left-radius: $btn-border-radius-base;
  }
  > .#{$btnClassName}:last-child:not(:first-child),
  > span:last-child:not(:first-child) > .#{$btnClassName} {
    border-top-right-radius: $btn-border-radius-base;
    border-bottom-right-radius: $btn-border-radius-base;
  }
  &-sm {
    > .#{$btnClassName}:only-child {
      border-radius: $btn-border-radius-sm;
    }
    > span:only-child > .#{$btnClassName} {
      border-radius: $btn-border-radius-sm;
    }
    > .#{$btnClassName}:first-child:not(:last-child),
    > span:first-child:not(:last-child) > .#{$btnClassName} {
      border-top-left-radius: $btn-border-radius-sm;
      border-bottom-left-radius: $btn-border-radius-sm;
    }
    > .#{$btnClassName}:last-child:not(:first-child),
    > span:last-child:not(:first-child) > .#{$btnClassName} {
      border-top-right-radius: $btn-border-radius-sm;
      border-bottom-right-radius: $btn-border-radius-sm;
    }
  }
  & > & {
    float: left;
  }
  & > &:not(:first-child):not(:last-child) > .#{$btnClassName} {
    border-radius: 0;
  }
  & > &:first-child:not(:last-child) {
    > .#{$btnClassName}:last-child {
      padding-right: 8px;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  & > &:last-child:not(:first-child) > .#{$btnClassName}:first-child {
    padding-left: 8px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}
